services:
  app:
    build:
      context: docker
      dockerfile: app.Dockerfile
    restart: unless-stopped
    tty: true
    volumes:
      - ./:/var/www
    networks:
      - app
    depends_on:
      - db
  webserver:
    image: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./:/var/www
    networks:
      - app
    depends_on:
      - app
  db:
    image: mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app
  mailhog:
    image: mailhog/mailhog:latest
    restart: unless-stopped
    ports:
      - "8025:8025"
    networks:
      - app
    depends_on:
      - app
  cron:
    build:
      context: docker/cron
      dockerfile: cron.Dockerfile
    restart: unless-stopped
    volumes:
      - ./:/var/www
    networks:
      - app
    depends_on:
      - app
  redis:
    image: 'bitnami/redis:latest'
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    tty: true
    volumes:
      - redis-data:/bitnami/redis/data
    networks:
      - app
networks:
  app:
    driver: bridge
volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local